name: Maven Selenium Tests CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  MAVEN_OPTS: "-Dmaven.test.failure.ignore=false"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '18'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Install Google Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -f install -y
          google-chrome --version

      - name: Install ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -1)
          echo "Chrome version: $CHROME_VERSION"
          CHROME_MAJOR_VERSION=${CHROME_VERSION%%.*}
          echo "Chrome major version: $CHROME_MAJOR_VERSION"
          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_MAJOR_VERSION)
          echo "ChromeDriver version: $CHROMEDRIVER_VERSION"
          wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip -o chromedriver_linux64.zip
          sudo mv -f chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          chromedriver --version

      - name: Run Maven tests
        run: mvn clean test
        continue-on-error: true

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: target/surefire-reports/*.xml

      - name: Upload Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: screenshots/

      - name: Slack Notification on Failure
        if: failure() && env.SLACK_WEBHOOK_URL != ''
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          webhook_url: ${{ env.SLACK_WEBHOOK_URL }}
          message: |
            :x: Maven Selenium tests failed on ${{ github.repository }} branch ${{ github.ref }}.
            Check details: ${{ github.run_url }}

      - name: Add workflow summary on failure
        if: failure()
        run: echo "Tests failed! See logs at $GITHUB_RUN_URL" >> $GITHUB_STEP_SUMMARY
